name: Deploy AI Assistant

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Free up Disk Space
    - name: Free up disk space
      run: |
        echo "Cleaning up unused resources..."
        sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
        docker system prune -af || true
        docker volume prune -f || true
        df -h

    # Step 3: Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Step 4: Log in to DockerHub
    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 5: Build FastAPI Image
    - name: Build and push FastAPI image
      uses: docker/build-push-action@v4
      with:
        context: ./fastapi
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/fastapi:latest
          ${{ secrets.DOCKER_USERNAME }}/fastapi:${{ github.sha }}
        no-cache: true

    # Step 6: Build Streamlit Image
    - name: Build and push Streamlit image
      uses: docker/build-push-action@v4
      with:
        context: ./streamlit
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/streamlit:latest
          ${{ secrets.DOCKER_USERNAME }}/streamlit:${{ github.sha }}
        no-cache: true

    # Step 7: Debug Build Context
    - name: Debug build context for FastAPI
      run: ls -R ./fastapi

    - name: Debug build context for Streamlit
      run: ls -R ./streamlit

    # Step 8: Deploy to EC2 via SSH
    - name: Deploy to EC2 via SSH
      uses: appleboy/ssh-action@v0.1.12
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_KEY }}
        port: 22
        script: |
          set -e
          cd /home/ubuntu/LearningAssistant
          echo "Pulling latest Docker images..."
          sudo docker-compose pull --ignore-pull-failures
          echo "Restarting services..."
          sudo docker-compose up -d --remove-orphans

    # Step 9: Verify Deployment
    - name: Check services health
      uses: appleboy/ssh-action@v0.1.12
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_KEY }}
        port: 22
        script: |
          set -e
          retries=5
          delay=5
          for i in $(seq 1 $retries); do
            echo "Checking FastAPI service health (attempt $i/$retries)..."
            curl -f http://localhost:8000/docs && break || sleep $delay
          done
          for i in $(seq 1 $retries); do
            echo "Checking Streamlit service health (attempt $i/$retries)..."
            curl -f http://localhost:8501 && break || sleep $delay
          done
