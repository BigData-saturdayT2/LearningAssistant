name: Deploy AI Assistant

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Step 3: Log in to DockerHub
    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Build FastAPI Image
    - name: Build and push FastAPI image
      uses: docker/build-push-action@v4
      with:
        context: ./fastapi
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/fastapi:latest


    # Build Streamlit Image
    - name: Build and push Streamlit image
      uses: docker/build-push-action@v4
      with:
        context: ./streamlit
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/streamlit:latest


    # Step 6: Deploy to EC2 via SSH
    - name: Deploy to EC2 via SSH
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_KEY }}
        port: 22
        script: |
          cd /home/ubuntu/LearningAssistant
          echo "Updating images..."
          sudo docker-compose pull
          echo "Starting services with environment variables..."
          sudo docker-compose up -d --remove-orphans

    # Step 7: Verify Deployment
    - name: Check services health
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_KEY }}
        port: 22
        script: |
          curl -f http://localhost:8000/docs || exit 1
          curl -f http://localhost:8501 || exit 1
